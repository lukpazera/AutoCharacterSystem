
<?xml version="1.0" encoding="UTF-8"?>
<configuration>

  <!-- Log System User String -->
  <atom type="CommandHelp">
    <hash type="LogSystem" key="riggingsys@en_US">
      <atom type="UserName">Auto Character System</atom>
    </hash>

      <!-- Contexts -->
	  <hash type="Command" key="rs.context.devMode@en_US">
	    <atom type="UserName">Development Mode</atom>
	    <atom type="ButtonName">Development Mode</atom>
	    <atom type="Desc">Switches context into development mode in which building rig assets is possible.</atom>
	    <atom type="ToolTip">Switches context into development mode in which building rig assets is possible.</atom>
	  </hash>

	  <!-- Scene -->

      <hash type="ArgumentType" key="rsScene-accessLevel@en_US">
        <atom type="UserName">Access Level</atom>

        <hash type="Option" key="dev">
          <atom type="UserName">Develop</atom>
        </hash>
        <hash type="Option" key="edit">
          <atom type="UserName">Assemble | Edit</atom>
        </hash>
        <hash type="Option" key="anim">
          <atom type="UserName">Animate</atom>
        </hash>
      </hash>

	  <hash type="Command" key="rs.scene.access@en_US">
	    <atom type="UserName">Access Level</atom>
	    <atom type="ButtonName">Access Level</atom>
	    <atom type="Desc">Sets access level for editing rigs.</atom>
	    <atom type="ToolTip">Sets access level for editing rigs.</atom>
	    <hash type="Argument" key="level">
	      <atom type="UserName">Access Level</atom>
	      <atom type="ArgumentType">rsScene-accessLevel</atom>
	    </hash>
	  </hash>

	  <!-- Rig commands -->
	  <hash type="Command" key="rs.rig.new@en_US">
	    <atom type="UserName">New Rig</atom>
	    <atom type="ButtonName">New Rig</atom>
	    <atom type="Desc">Adds new rig to the current scene.</atom>
	    <atom type="ToolTip">Adds new, empty rig to the current scene.\nUse this command to start assembling a custom rig from scratch.</atom>
	    <hash type="Argument" key="name">
	      <atom type="UserName">Name</atom>
	      <atom type="Desc">Name of the rig.</atom>
	      <atom type="ToolTip">Name of the rig.</atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.rig.name@en_US">
	    <atom type="UserName">Rig Name</atom>
	    <atom type="ButtonName">Name</atom>
	    <atom type="Desc">Changes name of the rig.</atom>
	    <atom type="ToolTip">Changes name of the rig.</atom>
	    <hash type="Argument" key="name">
	      <atom type="UserName">Name</atom>
	      <atom type="Desc">Name of the rig.</atom>
	      <atom type="ToolTip">Name of the rig.</atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.rig.editPopup@en_US">
	    <atom type="UserName">Edit Rig</atom>
	    <atom type="ButtonName">Edit Rig</atom>
	    <atom type="Desc">Selects the edit rig.</atom>
	    <atom type="ToolTip">Selects the rig to edit in all rig editing contexts.\nOnly one rig can be edited at a time.</atom>
	  </hash>

	  <hash type="Command" key="rs.rig.selectRoot@en_US">
	    <atom type="UserName">Select Edit Rig Root Item</atom>
	    <atom type="ButtonName">Select Edit Rig Root Item</atom>
	    <atom type="Desc">Selects the edit rig root item.</atom>
	    <atom type="ToolTip">Selects the currently edited rig root item.\nUse this command to quickly get access to rig properties that are available via rig root item properties panel.</atom>
	  </hash>

	  <hash type="Command" key="rs.rig.refSize@en_US">
	    <atom type="UserName">Reference Size</atom>
	    <atom type="ButtonName">Reference Size</atom>
	    <atom type="Desc">Sets reference size for a rig.</atom>
	    <atom type="ToolTip">Sets reference size for a rig.</atom>
	    <hash type="Argument" key="size">
	      <atom type="UserName">Reference Size</atom>
	      <atom type="Desc">Reference size of the rig.</atom>
	      <atom type="ToolTip">Reference size of the rig.</atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.rig.save@en_US">
	    <atom type="UserName">Save Rig As ...</atom>
	    <atom type="ButtonName">Save Rig As ...</atom>
	    <atom type="Desc">Saves current edit rig as .lxp preset.</atom>
	    <atom type="ToolTip">Saves current edit rig as .lxp preset.</atom>
	    <hash type="Argument" key="filename">
	      <atom type="UserName">Filename</atom>
	      <atom type="Desc">Filename of the saved rig preset.</atom>
	      <atom type="ToolTip">Filename of the saved rig preset.</atom>
	    </hash>
	    <hash type="Argument" key="captureThumb">
	      <atom type="UserName">Capture Thumb</atom>
	      <atom type="Desc">Turn on to save preset with thumbnail.</atom>
	      <atom type="ToolTip">Turn on to save preset with thumbnail.</atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.rig.quickSave@en_US">
	    <atom type="UserName">Quick Save</atom>
	    <atom type="ButtonName">Quick Save</atom>
	    <atom type="Desc">Saves current edit rig as .lxp preset in default rigs path and under current rig's name.</atom>
	    <atom type="ToolTip">Saves current edit rig as .lxp preset in default rigs path and under current rig's name.</atom>
	    <hash type="Argument" key="captureThumb">
	      <atom type="UserName">Capture Thumb</atom>
	      <atom type="Desc">Turn on to save preset with thumbnail.</atom>
	      <atom type="ToolTip">Turn on to save preset with thumbnail.</atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.rig.rebuildMeta@en_US">
	    <atom type="UserName">Rebuild Meta</atom>
	    <atom type="ButtonName">Rebuild Meta</atom>
	    <atom type="Desc">Rebuilds meta data about the rig.</atom>
	    <atom type="ToolTip">Rebuilds meta data about the rig.\nMeta data needs to be up to date with rig for tools to work properly.\nMeta data is updated as you develop the rig but in case it goes out of sync you can rebuild it.</atom>
	  </hash>

      <hash type="ArgumentType" key="rsRig-testBindSkelType@en_US">
        <atom type="UserName">Skeleton Type</atom>
        <hash type="Option" key="bind">
          <atom type="UserName">Bind</atom>
        </hash>
        <hash type="Option" key="bake">
          <atom type="UserName">Bake (Export)</atom>
        </hash>
      </hash>

	  <hash type="Command" key="rs.rig.testBindSkeleton@en_US">
	    <atom type="UserName">Test Bind Skeleton</atom>
	    <atom type="ButtonName">Test Bind Skeleton</atom>
	    <atom type="Desc">Builds test bind skeleton of either bind or bake type.</atom>
	    <atom type="ToolTip">Builds test bind skeleton hierarchy of either bind or bake type.\nYou can use this command to test wheter the resulting skeleton hierarchy is correct. This is especially useful if you are building custom rig and you are getting wrong results either when binding meshes to the rig or when exporting the rig to external applications.\nBind type allows for creating a copy of the skeleton that will be used for creating new bind.\nBake type allows for creating a copy of a skeleton that will be the result of either baking or game export tools.</atom>
	    <hash type="Argument" key="type">
	      <atom type="UserName">Skeleton Type</atom>
	      <atom type="ArgumentType">rsRig-testBindSkelType</atom>
	      <atom type="Desc">Type of bind skeleton to build.</atom>
	      <atom type="ToolTip">Type of bind skeleton to build.</atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.rig.delete@en_US">
	    <atom type="UserName">Delete Rig</atom>
	    <atom type="ButtonName">Delete Rig</atom>
	    <atom type="Desc">Deletes the rig from a scene.</atom>
	    <atom type="ToolTip">Deletes the rig from a scene.\nNote that the only proper way of deleting the rig is using this Delete command.</atom>
	    <hash type="Argument" key="rootItem">
	      <atom type="UserName">Root Item</atom>
	      <atom type="Desc">Identifier of the rig's root item in scene.</atom>
	      <atom type="ToolTip">Identifier of the rig's root item in scene.</atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.rig.namingScheme@en_US">
	    <atom type="UserName">Naming Scheme</atom>
	    <atom type="ButtonName">Naming Scheme</atom>
	    <atom type="Desc">Sets naming scheme for the rig.</atom>
	    <atom type="ToolTip">Sets naming scheme for the rig.</atom>
	    <hash type="Argument" key="list">
	      <atom type="UserName">List</atom>
	      <atom type="Desc">Automatically generated list of naming schemes registered with rigging system.</atom>
	      <atom type="ToolTip">Automatically generated list of naming schemes registered with rigging system.</atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.rig.colorScheme@en_US">
	    <atom type="UserName">Color Scheme</atom>
	    <atom type="ButtonName">Color Scheme</atom>
	    <atom type="Desc">Sets color scheme for the rig.</atom>
	    <atom type="ToolTip">Sets color scheme for the rig.</atom>
	    <hash type="Argument" key="list">
	      <atom type="UserName">List</atom>
	      <atom type="Desc">Automatically generated list of color schemes registered with rigging system.</atom>
	      <atom type="ToolTip">Automatically generated list of color schemes registered with rigging system.</atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.rig.deleteGuide@en_US">
	    <atom type="UserName">Delete Guide</atom>
	    <atom type="ButtonName">Delete Guide</atom>
	    <atom type="Desc">Removes guide setup to decrease rig size.</atom>
	    <atom type="ToolTip">Removes guide setup to decrease rig size.\nNote that this is destructive operation and you will not be able to adjust rig fitting once the guide is removed.</atom>
	    <hash type="Argument" key="rootItem">
	      <atom type="UserName">Root Item</atom>
	      <atom type="Desc">Identifier of the rig's root item in scene.</atom>
	      <atom type="ToolTip">Identifier of the rig's root item in scene.</atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.rig.standardize@en_US">
	    <atom type="UserName">Standardize Rig</atom>
	    <atom type="ButtonName">Standardize</atom>
	    <atom type="Desc">Converts entire rig to standard MODO setup.</atom>
	    <atom type="ToolTip">Converts entire rig to standard scene that can be opened in vanilla MODO. Custom item types are converted to standard MODO items, custom properties are removed.\nNote that standardized rig is not recognized as ACS3 rig anymore.</atom>
	    <hash type="Argument" key="rootItem">
	      <atom type="UserName">Root Item</atom>
	      <atom type="Desc">Identifier of the rig's root item in scene.</atom>
	      <atom type="ToolTip">Identifier of the rig's root item in scene.</atom>
	    </hash>
	    <hash type="Argument" key="suffix">
	      <atom type="UserName">Standardized Scene Filename Suffix</atom>
	      <atom type="Desc">Standardized scene will be saved with suffix added to its filename.</atom>
	      <atom type="ToolTip">Set suffix for filename of the standardized scene. The scene will be saved after standardizing process is complete.</atom>
	    </hash>
	    <hash type="Argument" key="delGuide">
	      <atom type="UserName">Delete Guide</atom>
	      <atom type="Desc">Deletes guide from the rig.</atom>
	      <atom type="ToolTip">Guide is not needed in a standardized rig and can be deleted to optimize standardized scene size.</atom>
	    </hash>
	  </hash>

      <hash type="ArgumentType" key="rsBake-action@en_US">
        <atom type="UserName">Bake Action</atom>

        <hash type="Option" key="all">
          <atom type="UserName">All</atom>
        </hash>
        <hash type="Option" key="current">
          <atom type="UserName">Current</atom>
        </hash>
        <hash type="Option" key="none">
          <atom type="UserName">None</atom>
        </hash>
      </hash>

	  <hash type="Command" key="rs.rig.bake@en_US">
	    <atom type="UserName">Bake</atom>
	    <atom type="ButtonName">Bake</atom>
	    <atom type="Desc">Bakes entire rig to a simple format that can be exported to external applications.</atom>
	    <atom type="ToolTip">Bakes entire rig to a simple format that can be exported to external applications (using .fbx for example).</atom>
	    <hash type="Argument" key="action">
	      <atom type="UserName">Bake Action</atom>
	      <atom type="ArgumentType">rsBake-action</atom>
	      <atom type="Desc">Bake either all actions or only current one.</atom>
	      <atom type="ToolTip">Choose whether to bake all actions or only the current one.</atom>
	    </hash>
	    <hash type="Argument" key="suffix">
	      <atom type="UserName">Baked Filename Suffix</atom>
	      <atom type="Desc">Baked scene is saved with a given suffix to avoid making destructive changes to the current scene.</atom>
	      <atom type="ToolTip">Baked scene is saved with a given suffix to avoid making destructive changes to the current scene.</atom>
	    </hash>
	    <hash type="Argument" key="flatSkeleton">
	      <atom type="UserName">Flat Skeleton</atom>
	      <atom type="Desc">Flat skeleton enables support for baking squash and stretch animation.</atom>
	      <atom type="ToolTip">Flat skeleton enables support for baking squash and stretch animation.\nEvery joint will be parented to root motion locator or to the baked hierarchy root if root motion is not enabled.</atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.rig.selfValidate@en_US">
	    <atom type="UserName">Validate Rig</atom>
	    <atom type="ButtonName">Validate Rig</atom>
	    <atom type="Desc">Scans entire rig for its integrity.</atom>
	    <atom type="ToolTip">Scans entire rig for its integrity. Items that are outside of either rig hierarchy or assemblies setup are pulled in.</atom>
	  </hash>

	  <hash type="Command" key="rs.rig.snapshot@en_US">
	    <atom type="UserName">Snapshot</atom>
	    <atom type="ButtonName">Snapshot</atom>
	    <atom type="Desc">Takes a character snapshot copying all meshes visible in current resolution into new mesh using pose at current frame.</atom>
	    <atom type="ToolTip">Takes a character snapshot copying all meshes visible in current resolution into new mesh using pose at current frame.\nThe rig itself is not affected.</atom>
	  </hash>

	  <hash type="Command" key="rs.rig.gameExportSet@en_US">
	    <atom type="UserName">Engine</atom>
	    <atom type="ButtonName">Engine</atom>
	    <atom type="Desc">Choose an application to which you want to export the rig.</atom>
	    <atom type="ToolTip">Choose an application to which you want to export the rig. Each application can have different set of export commands.</atom>
	    <hash type="Argument" key="ident">
	      <atom type="UserName">Identifier</atom>
	      <atom type="Desc">Identifier of a set of commands for exporting to a particular game engine (or other external application).</atom>
	      <atom type="ToolTip">Identifier of a set of commands for exporting to a particular game engine (or other external application).</atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.rig.gameExportSetPath@en_US">
	    <atom type="UserName">Choose Export Path</atom>
	    <atom type="ButtonName">Choose Export Path</atom>
	    <atom type="Desc">Sets path to which rig data will be exported.</atom>
	    <atom type="ToolTip">Sets path to which rig data will be exported.</atom>
	  </hash>

	  <hash type="Command" key="rs.rig.gameExportEditPath@en_US">
	    <atom type="UserName">Export Path</atom>
	    <atom type="ButtonName">Export Path</atom>
	    <atom type="Desc">Allows for editing export path manually. Rig data will be exported to the specified directory.</atom>
	    <atom type="ToolTip">Allows for editing export path manually. Rig data will be exported to the specified directory.</atom>
	  </hash>

	  <hash type="Command" key="rs.rig.gameExportStretch@en_US">
	    <atom type="UserName">Flat Skeleton</atom>
	    <atom type="ButtonName">Flat Skeleton</atom>
	    <atom type="Desc">Flat skeleton enables support for baking squash and stretch animation.</atom>
	    <atom type="ToolTip">Flat skeleton enables support for baking squash and stretch animation.\nEvery joint will be parented to root motion locator or to the baked hierarchy root if root motion is not enabled.</atom>
	  </hash>

	  <!-- Retargeting commands -->
	  <hash type="Command" key="rs.rig.retargetInit@en_US">
	    <atom type="UserName">Initialize Retargeting</atom>
	    <atom type="ButtonName">Initialize</atom>
	    <atom type="Desc">Initializes the rig for retargeting.</atom>
	    <atom type="ToolTip">Initializes the rig for retargeting. Select root item of the hierarchy to retarget from, this is the item that has both position and rotation keyframed.</atom>
	  </hash>

	  <hash type="Command" key="rs.rig.retargetBake@en_US">
	    <atom type="UserName">Bake Retargeting</atom>
	    <atom type="ButtonName">Bake</atom>
	    <atom type="Desc">Bakes retargeted motion into keyframes on a new action.</atom>
	    <atom type="ToolTip">Bakes retargeted motion into keyframes on a new action.</atom>
	    <hash type="Argument" key="action">
	      <atom type="UserName">Action Name</atom>
	      <atom type="Desc">Name of action to bake retargeted motion to.</atom>
	      <atom type="ToolTip">Name of action to bake retargeted motion to. An Action with this name will be created.</atom>
	    </hash>
	    <hash type="Argument" key="firstFrame">
	      <atom type="UserName">First Frame</atom>
	      <atom type="Desc">Frame to start baking from.</atom>
	      <atom type="ToolTip">Frame to start baking from.</atom>
	    </hash>
	    <hash type="Argument" key="lastFrame">
	      <atom type="UserName">Last Frame</atom>
	      <atom type="Desc">Frame to end baking at.</atom>
	      <atom type="ToolTip">Frame to end baking at.</atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.rig.retargetReduceKeys@en_US">
	    <atom type="UserName">Reduce Retargeted Keys</atom>
	    <atom type="ButtonName">Reduce Retargeted Keys</atom>
	    <atom type="Desc">Reduces keyframes in retargeted motion.</atom>
	    <atom type="ToolTip">Reduces keyframes in retargeted motion.\nNote that although the motion is kept close to original the reduction may alter the motion beyond acceptable tolerance.</atom>
	  </hash>

	  <hash type="Command" key="rs.rig.retargetCleanUp@en_US">
	    <atom type="UserName">Retargeting Clean Up</atom>
	    <atom type="ButtonName">Clean Up</atom>
	    <atom type="Desc">Remove full body IK settings from retarget skeleton.</atom>
	    <atom type="ToolTip">Cleans up the rig by removing full body IK setup from retargeting skeleton. Always use this command when you are done with retargeting motions.</atom>
	  </hash>

	  <hash type="Command" key="rs.rig.retargetAddLinks@en_US">
	    <atom type="UserName">Auto Mapping</atom>
	    <atom type="ButtonName">Auto Mapping</atom>
	    <atom type="Desc">Find retargeting mapping links between source and retarget skeletons automatically.</atom>
	    <atom type="ToolTip">Automatically finds retargeting mapping links between source and retarget skeletons.</atom>
	  </hash>

	  <hash type="Command" key="rs.rig.retargetClearLinks@en_US">
	    <atom type="UserName">Clear Mapping</atom>
	    <atom type="ButtonName">Clear Mapping</atom>
	    <atom type="Desc">Clears retargeting mapping links between source and retarget skeletons.</atom>
	    <atom type="ToolTip">Clears retargeting mapping links between source and retarget skeletons.</atom>
	  </hash>

	  <hash type="Command" key="rs.rig.retargetSkeletonToggle@en_US">
	    <atom type="UserName">Show Retargeting Skeleton</atom>
	    <atom type="ButtonName">Show Retargeting Skeleton</atom>
	    <atom type="Desc">Toggles retargeting skeleton visibility on/off.</atom>
	    <atom type="ToolTip">Toggles retargeting skeleton visibility on/off.</atom>
	  </hash>

	  <hash type="Command" key="rs.rig.retargetSkeletonLock@en_US">
	    <atom type="UserName">Lock Retargeting Skeleton</atom>
	    <atom type="ButtonName">Lock Retargeting Skeleton</atom>
	    <atom type="Desc">Toggles retargeting skeleton lock state.</atom>
	    <atom type="ToolTip">Toggles retargeting skeleton lock state. When retargeting skeleton is locked its joints are not selectable and not editable via keyframe editing tools.\nThe retargeting skeleton should generally stay locked unless you need to perform specific edits to its animation.</atom>
	  </hash>

	  <hash type="Command" key="rs.rig.retargetMapFile@en_US">
	    <atom type="UserName">Choose Retargeting Map</atom>
	    <atom type="ButtonName">Choose Retargeting Map</atom>
	    <atom type="Desc">Allows for choosing retargeting map file that will be used when intializing retargeting.</atom>
	    <atom type="ToolTip">Allows for choosing retargeting map file that will be used when intializing retargeting.</atom>
	  </hash>

	  <!-- Module commands -->
	  <hash type="Command" key="rs.module.new@en_US">
	    <atom type="UserName">New Module</atom>
	    <atom type="ButtonName">New</atom>
	    <atom type="Desc">Adds new module to the currently edited rig.</atom>
	    <atom type="ToolTip">Adds new module to the currently edited rig.</atom>
	    <hash type="Argument" key="name">
	      <atom type="UserName">Name</atom>
	      <atom type="Desc">Name of the module.</atom>
	      <atom type="ToolTip">Name of the module.</atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.module.editPopup@en_US">
	    <atom type="UserName">Edit Module</atom>
	    <atom type="ButtonName">Edit Module</atom>
	    <atom type="Desc">Selects the edit module.</atom>
	    <atom type="ToolTip">Selects the module to edit by module editing tools.\nOnly one module can be edited at a time.</atom>
	  </hash>

	  <hash type="Command" key="rs.module.selectRoot@en_US">
	    <atom type="UserName">Select Edit Module Root Item</atom>
	    <atom type="ButtonName">Select Edit Module Root Item</atom>
	    <atom type="Desc">Selects the edit module root item.</atom>
	    <atom type="ToolTip">Selects the currently edited module root item.\nUse this command to quickly get access to module properties that are available via module root item properties panel.</atom>
	  </hash>

	  <hash type="Command" key="rs.module.name@en_US">
	    <atom type="UserName">Module Name</atom>
	    <atom type="ButtonName">Name</atom>
	    <atom type="Desc">Changes name of the module.</atom>
	    <atom type="ToolTip">Changes name of the module.</atom>
	    <hash type="Argument" key="name">
	      <atom type="UserName">Name</atom>
	      <atom type="Desc">Name of the module.</atom>
	      <atom type="ToolTip">Name of the module.</atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.module.duplicate@en_US">
	    <atom type="UserName">Duplicate Module</atom>
	    <atom type="ButtonName">Duplicate</atom>
	    <atom type="Desc">Duplicates current edit module.</atom>
	    <atom type="ToolTip">Duplicates current edit module.</atom>
	    <hash type="Argument" key="offX">
	      <atom type="UserName">Offset X</atom>
	      <atom type="Desc">X axis offset for placing duplicated module.</atom>
	      <atom type="ToolTip">X axis offset for placing duplicated module.</atom>
	    </hash>
	    <hash type="Argument" key="offY">
	      <atom type="UserName">Offset Y</atom>
	      <atom type="Desc">Y axis offset for placing duplicated module.</atom>
	      <atom type="ToolTip">Y axis offset for placing duplicated module.</atom>
	    </hash>
	    <hash type="Argument" key="offZ">
	      <atom type="UserName">Offset Z</atom>
	      <atom type="Desc">Z axis offset for placing duplicated module.</atom>
	      <atom type="ToolTip">Z axis offset for placing duplicated module.</atom>
	    </hash>

	    <hash type="Argument" key="rootItem">
	      <atom type="UserName">Module Root Item</atom>
	      <atom type="Desc">Root item of the module to duplicate.</atom>
	      <atom type="ToolTip">Root item of the module to duplicate.</atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.module.mirror@en_US">
	    <atom type="UserName">Mirror Module</atom>
	    <atom type="ButtonName">Mirror</atom>
	    <atom type="Desc">Mirrors current edit module.</atom>
	    <atom type="ToolTip">Mirrors current edit module.</atom>
	    <hash type="Argument" key="rootItem">
	      <atom type="UserName">Module Root Item</atom>
	      <atom type="Desc">Root item of the module to mirror.</atom>
	      <atom type="ToolTip">Root item of the module to mirror.</atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.module.save@en_US">
	    <atom type="UserName">Save Module</atom>
	    <atom type="ButtonName">Save As...</atom>
	    <atom type="Desc">Saves current edit module as .lxp preset.</atom>
	    <atom type="ToolTip">Saves current edit module as .lxp preset under chosen filename.</atom>
	    <hash type="Argument" key="filename">
	      <atom type="UserName">Filename</atom>
	      <atom type="Desc">Filename of the saved module preset.</atom>
	      <atom type="ToolTip">Filename of the saved module preset.</atom>
	    </hash>
	    <hash type="Argument" key="captureThumb">
	      <atom type="UserName">Capture Thumb</atom>
	      <atom type="Desc">Turn on to save preset with thumbnail.</atom>
	      <atom type="ToolTip">Turn on to save preset with thumbnail.</atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.module.quickSave@en_US">
	    <atom type="UserName">Quick Save</atom>
	    <atom type="ButtonName">Quick Save</atom>
	    <atom type="Desc">Saves current edit module under default filename to default module presets location.</atom>
	    <atom type="ToolTip">Automatically saves current edit module to default module presets location under default filename, no user input is required.\nThe filename will be either one set in module development properties or module name if no filename setting is set.</atom>
	  </hash>

	  <hash type="Command" key="rs.module.delete@en_US">
	    <atom type="UserName">Delete Module</atom>
	    <atom type="ButtonName">Delete</atom>
	    <atom type="Desc">Deletes the module from scene.</atom>
	    <atom type="ToolTip">Deletes the module from scene.</atom>
	    <hash type="Argument" key="rootItem">
	      <atom type="UserName">Root Item</atom>
	      <atom type="Desc">Identifier of the module's root item in scene.</atom>
	      <atom type="ToolTip">Identifier of the module's root item in scene.</atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.module.side@en_US">
	    <atom type="UserName">Module Side</atom>
	    <atom type="ButtonName">Side</atom>
	    <atom type="Desc">Sets module side.</atom>
	    <atom type="ToolTip">Sets module side.</atom>
	    <hash type="Argument" key="side">
	      <atom type="UserName">Side</atom>
	      <atom type="Desc">center|left|right</atom>
	      <atom type="ToolTip"></atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.module.allowIdentifierEdit@en_US">
	    <atom type="UserName">Edit Identifier</atom>
	    <atom type="ButtonName">Edit Identifier</atom>
	    <atom type="Desc">Allows for editing unique module identifier.</atom>
	    <atom type="ToolTip">Allows for editing unique module identifier.</atom>
	  </hash>

	  <hash type="Command" key="rs.module.identifier@en_US">
	    <atom type="UserName">Identifier</atom>
	    <atom type="ButtonName">Identifier</atom>
	    <atom type="Desc">Sets unique module identifier.</atom>
	    <atom type="ToolTip">Sets unique module identifier.</atom>
	  </hash>

	  <hash type="Command" key="rs.module.symmetricModulePopup@en_US">
	    <atom type="UserName">Symmetric To Module</atom>
	    <atom type="ButtonName">Symmetric To Module</atom>
	    <atom type="Desc">Sets a symmetry reference module for a given module.</atom>
	    <atom type="ToolTip">Sets a symmetry reference module for a given module.</atom>
	  </hash>

	  <hash type="Command" key="rs.module.isolateEdit@en_US">
	    <atom type="UserName">Isolate Edit Module</atom>
	    <atom type="ButtonName">Isolate Edit Module</atom>
	    <atom type="Desc">Isolates current edit module. All other modules will get hidden.</atom>
	    <atom type="ToolTip">Isolates current edit module. All other modules will get hidden.</atom>
	  </hash>

	  <hash type="Command" key="rs.module.newPiece@en_US">
	    <atom type="UserName">Add Piece</atom>
	    <atom type="ButtonName">Add Piece</atom>
	    <atom type="Desc">Adds new piece to a current edit module.</atom>
	    <atom type="ToolTip">Adds new piece to a current edit module.</atom>
	    <hash type="Argument" key="name">
	      <atom type="UserName">Name</atom>
	      <atom type="Desc">Piece name.</atom>
	      <atom type="ToolTip"></atom>
	    </hash>
	    <hash type="Argument" key="ident">
	      <atom type="UserName">Identifier</atom>
	      <atom type="Desc">Identifier for the piece. It will be used for piece filename as well.</atom>
	      <atom type="ToolTip"></atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.module.savePiece@en_US">
	    <atom type="UserName">Save Piece</atom>
	    <atom type="ButtonName">Save Piece</atom>
	    <atom type="Desc">Saves currently selected piece as preset. Preset file is saved in defined pieces path automatically.</atom>
	    <atom type="ToolTip">Saves currently selected piece as preset. Preset file is saved in defined pieces path automatically.</atom>
	  </hash>

	  <hash type="Command" key="rs.module.polygonRegions@en_US">
	    <atom type="UserName">Assign Rig Clay Region</atom>
	    <atom type="ButtonName">Assign Rig Clay Region</atom>
	    <atom type="Desc">Assigns one of predefined rig clay regions to selected polygons.</atom>
	    <atom type="ToolTip">Assigns one of predefined rig clay regions to selected polygons.</atom>
	  </hash>

	  <!-- Items -->
	  <hash type="Command" key="rs.item.name@en_US">
	    <atom type="UserName">Item Name</atom>
	    <atom type="ButtonName">Name</atom>
	    <atom type="Desc">Sets a basename for an item. Full item name will be automatically rendered around basename.</atom>
	    <atom type="ToolTip">Sets a basename for an item. Full item name will be automatically rendered around basename.</atom>
	    <hash type="Argument" key="name">
	      <atom type="UserName">Name</atom>
	      <atom type="Desc">Basename for rig item.</atom>
	      <atom type="ToolTip"></atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.item.side@en_US">
	    <atom type="UserName">Item Side</atom>
	    <atom type="ButtonName">Side</atom>
	    <atom type="Desc">Sets item side.</atom>
	    <atom type="ToolTip">Sets item side.</atom>
	    <hash type="Argument" key="side">
	      <atom type="UserName">Side</atom>
	      <atom type="Desc">inherit|center|left|right</atom>
	      <atom type="ToolTip"></atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.item.featuresEdit@en_US">
	    <atom type="UserName">Configure Features</atom>
	    <atom type="ButtonName">Configure Features</atom>
	    <atom type="Desc">When on a list of features available for an item is show. Features can be added or removed from item using this list.</atom>
	    <atom type="ToolTip">When on a list of features available for an item is show. Features can be added or removed from item using this list.</atom>
	  </hash>

	  <hash type="Command" key="rs.item.identifier@en_US">
	    <atom type="UserName">Identifier</atom>
	    <atom type="ButtonName">Identifier</atom>
	    <atom type="Desc">Sets item identifier.</atom>
	    <atom type="ToolTip">Sets item identifier.</atom>
	  </hash>

	  <hash type="Command" key="rs.item.colorPopup@en_US">
	    <atom type="UserName">Item Color</atom>
	    <atom type="ButtonName">Color</atom>
	    <atom type="Desc">Sets item color.</atom>
	    <atom type="ToolTip">Sets item color.</atom>
	  </hash>

	  <hash type="Command" key="rs.item.drawLink@en_US">
	    <atom type="UserName">Draw Link To Item</atom>
	    <atom type="ButtonName">Draw Link To Item</atom>
	    <atom type="Desc">Sets item to which the link will be drawn.</atom>
	    <atom type="ToolTip">Sets item to which the link will be drawn.</atom>
	  </hash>

	  <hash type="Command" key="rs.item.connectPlug@en_US">
	    <atom type="UserName">Plug</atom>
	    <atom type="ButtonName">Plug</atom>
	    <atom type="Desc">Connects Plug to the Socket.</atom>
	    <atom type="ToolTip">Connects Plug from one module to the Socket in another module.\nSelect at least one Plug and only one Socket to make the connection between Plug(s) and a Socket.</atom>
	  </hash>

	  <hash type="Command" key="rs.item.disconnectPlug@en_US">
	    <atom type="UserName">Unplug</atom>
	    <atom type="ButtonName">Unplug</atom>
	    <atom type="Desc">Disconnects Plug(s) from Socket.</atom>
	    <atom type="ToolTip">Disconnects Plug or multiple Plugs from their Sockets.\nSelect at least one Plug that is connected to a Socket to unplug it.</atom>
	  </hash>

	  <hash type="Command" key="rs.item.setGuideFromPopup@en_US">
	    <atom type="UserName">Guide</atom>
	    <atom type="ButtonName">Guide</atom>
	    <atom type="Desc">Choose a guide the item will be attached to.</atom>
	    <atom type="ToolTip">Choose a guide the item will be attached to.</atom>
	    <hash type="Argument" key="popupIndex">
	      <atom type="UserName">List</atom>
	      <atom type="Desc">Automatically generated list of guides available in the module.</atom>
	      <atom type="ToolTip">Automatically generated list of guides available in the module.</atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.item.guideZeroTransforms@en_US">
	    <atom type="UserName">Zero Transforms</atom>
	    <atom type="ButtonName">Zero Transforms</atom>
	    <atom type="Desc"></atom>
	    <atom type="ToolTip"></atom>
	  </hash>

	  <hash type="Command" key="rs.item.drawAxisSource@en_US">
	    <atom type="UserName">Orientation From</atom>
	    <atom type="ButtonName">Orientation From</atom>
	    <atom type="Desc">Allows for choosing other item as the source of orientation for axis drawing.</atom>
	    <atom type="ToolTip">Allows for choosing other item as the source of orientation for axis drawing.</atom>
	    <hash type="Argument" key="sourceItem">
	      <atom type="UserName">Source Item</atom>
	    </hash>
	  </hash>

	  <!-- Controller item feature -->
	  <hash type="Command" key="rs.controller.actorContent@en_US">
	    <atom type="UserName">Add to Actor</atom>
	    <atom type="ButtonName">Add to Actor</atom>
	    <atom type="Desc">Choose between adding entire controller item or specific channels to the actor.</atom>
	    <atom type="ToolTip">Choose between adding entire controller item or specific channels to the actor.</atom>
	  </hash>

      <hash type="ArgumentType" key="rsController-ctrlChannels@en_US">
        <atom type="UserName">Controlled Channels</atom>

        <hash type="Option" key="xfrm">
          <atom type="UserName">Transform Channels</atom>
        </hash>
        <hash type="Option" key="user">
          <atom type="UserName">User Channels</atom>
        </hash>
        <hash type="Option" key="item">
          <atom type="UserName">Item Channels</atom>
        </hash>
      </hash>

	  <hash type="Command" key="rs.controller.controlledChannels@en_US">
	    <atom type="UserName">Control</atom>
	    <atom type="ButtonName">Control</atom>
	    <atom type="Desc">xfrm|user|item</atom>
	    <atom type="ToolTip">Choose what kind of channels the controller will allow to edit, either transform channels or user ones.</atom>
	    <hash type="Argument" key="chans">
	      <atom type="UserName">Control</atom>
	      <atom type="Desc">xfrm|user|item</atom>
	      <atom type="ToolTip">xfrm|user|item</atom>
	      <atom type="ArgumentType">rsController-ctrlChannels</atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.controller.chanPresetChoice@en_US">
	    <atom type="UserName">Set From Preset</atom>
	    <atom type="ButtonName">Set From Preset</atom>
	    <atom type="Desc">Opens a popover with presets allowing for quickly setting states of entire channel set.</atom>
	    <atom type="ToolTip">Opens a popover with presets allowing for quickly setting states of entire channel set.</atom>
	  </hash>

	  <hash type="Command" key="rs.controller.changeDefaultDynaSpace@en_US">
	    <atom type="UserName">Change Default Space</atom>
	    <atom type="ButtonName">Change Default Space</atom>
	    <atom type="Desc">Changes default parent of a controller.</atom>
	    <atom type="ToolTip">Select controller and its new parent controller or socket to change controller's default space.</atom>
	  </hash>

	  <hash type="Command" key="rs.ctrl.removeParent@en_US">
	    <atom type="UserName">Delete Current Parent</atom>
	    <atom type="ButtonName">Delete Current Parent</atom>
	    <atom type="Desc">Deletes parent that is set at current time and action.</atom>
	    <atom type="ToolTip">Delets parent that is set at current time and action. The parent is permanently disconnected and all keyframes on which this parent is set will be removed from current action too. Other actions that have this parent will be affected as well.</atom>
	  </hash>

	  <hash type="Command" key="rs.controller.dynaParentDraw@en_US">
	    <atom type="UserName">Draw Controller And Parent Link</atom>
	    <atom type="ButtonName">Draw Controller And Parent Link</atom>
	    <atom type="Desc">Toggles drawing of the space switcher controller and parenting links.</atom>
	    <atom type="ToolTip">Toggles drawing of the space switcher controller and parenting links.</atom>
	  </hash>

	  <hash type="Command" key="rs.plug.bindLocator@en_US">
	    <atom type="UserName">Linked Bind Locator</atom>
	    <atom type="ButtonName">Linked Bind Locator</atom>
	    <atom type="Desc">Sets bind locator that will be linked with this plug. This setting is used when connecting bind skeletons from individual modules together.</atom>
	    <atom type="ToolTip">Sets bind locator that will be linked with this plug. This setting is used when connecting bind skeletons from individual modules together.</atom>
	  </hash>

	  <hash type="Command" key="rs.socket.bindLocator@en_US">
	    <atom type="UserName">Linked Bind Locator</atom>
	    <atom type="ButtonName">Linked Bind Locator</atom>
	    <atom type="Desc">Sets bind locator that will be linked with this socket. This setting is used when connecting bind skeletons from individual modules together.</atom>
	    <atom type="ToolTip">Sets bind locator that will be linked with this socket. This setting is used when connecting bind skeletons from individual modules together.</atom>
	  </hash>

	  <!-- Controller Guide item feature -->
      <hash type="ArgumentType" key="rsControllerGuide-ctrlChannels@en_US">
        <atom type="UserName">Controlled Channels</atom>

        <hash type="Option" key="xfrm">
          <atom type="UserName">Transform</atom>
        </hash>
        <hash type="Option" key="user">
          <atom type="UserName">User</atom>
        </hash>
      </hash>

	  <hash type="Command" key="rs.controllerGuide.controlledChannels@en_US">
	    <atom type="UserName">Controlled Channels</atom>
	    <atom type="ButtonName">Controlled Channels</atom>
	    <atom type="Desc">xfrm|user</atom>
	    <atom type="ToolTip">Choose what kind of channels the controller will allow to edit, either transform channels or user ones.</atom>
	    <hash type="Argument" key="chans">
	      <atom type="UserName">Control</atom>
	      <atom type="Desc">xfrm|user</atom>
	      <atom type="ToolTip">xfrm|user</atom>
	      <atom type="ArgumentType">rsControllerGuide-ctrlChannels</atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.controllerGuide.chanPresetChoice@en_US">
	    <atom type="UserName">Set From Preset</atom>
	    <atom type="ButtonName">Set From Preset</atom>
	    <atom type="Desc">Opens a popover with presets allowing for quickly setting states of entire channel set.</atom>
	    <atom type="ToolTip">Opens a popover with presets allowing for quickly setting states of entire channel set.</atom>
	  </hash>

	  <!-- Animation space -->
      <hash type="ArgumentType" key="rsController-animSpace@en_US">
        <atom type="UserName">Animation Space</atom>

        <hash type="Option" key="fixed">
          <atom type="UserName">Fixed</atom>
        </hash>
        <hash type="Option" key="dynamic">
          <atom type="UserName">Dynamic</atom>
        </hash>
      </hash>

	  <hash type="Command" key="rs.controller.animSpace@en_US">
	    <atom type="UserName">Animation Space</atom>
	    <atom type="ButtonName">Animation Space</atom>
	    <atom type="Desc">Choose between fixed animation space for a controller or a dynamic one.</atom>
	    <atom type="ToolTip">Choose between fixed animation space for a controller or a dynamic one.</atom>
	    <hash type="Argument" key="space">
	      <atom type="UserName">Space</atom>
	      <atom type="Desc">fixed|dynamic</atom>
	      <atom type="ToolTip">fixed|dynamic</atom>
	      <atom type="ArgumentType">rsController-animSpace</atom>
	    </hash>
	  </hash>
	  <!-- Animation space end -->

	  <!-- Guide Item -->
	  <hash type="Command" key="rs.guide.apply@en_US">
	    <atom type="UserName">Apply Guide</atom>
	    <atom type="ButtonName">Apply Guide</atom>
	    <atom type="Desc">Applies fitting changes from the guide to the actual rig.</atom>
	    <atom type="ToolTip">Applies fitting changes from the guide to the actual rig.</atom>
	  </hash>

	  <hash type="Command" key="rs.guide.symmetricGuidePopup@en_US">
	    <atom type="UserName">Symmetric To Guide</atom>
	    <atom type="ButtonName">Symmetric To Guide</atom>
	    <atom type="Desc">Sets a symmetry reference guide for a given guide.</atom>
	    <atom type="ToolTip">Sets a symmetry reference guide for a given guide.</atom>
	  </hash>

	  <hash type="Command" key="rs.guide.link@en_US">
	    <atom type="UserName">Parent</atom>
	    <atom type="ButtonName">Parent</atom>
	    <atom type="Desc">Parents one guide to another.</atom>
	    <atom type="ToolTip">Parents one guide to another. The parenting link is drawn as a purple line in viewport. Note that this is not physically parenting the guide but rather creating a constraint that behaves the same as parenting relationship.\nUse this tool to make guide setup for one module follow another module's guide. An example is the biped arm module in which finger submodules are parented to the hand guide.</atom>
	  </hash>

	  <hash type="Command" key="rs.guide.unlink@en_US">
	    <atom type="UserName">Unparent</atom>
	    <atom type="ButtonName">Unparent</atom>
	    <atom type="Desc">Disconnects the guide from its parent guide.</atom>
	    <atom type="ToolTip">Disconnects the guide from its parent guide.</atom>
	  </hash>

	  <hash type="Command" key="rs.guide.attachToOther@en_US">
	    <atom type="UserName">Attach</atom>
	    <atom type="ButtonName">Attach</atom>
	    <atom type="Desc">Attaches one edit guide to another.</atom>
	    <atom type="ToolTip">Attaches one edit guide to another. Attached guide becomes uneditable: it is not shown anymore and its position is constrained to the guide it was attached to.</atom>
	  </hash>

	  <hash type="Command" key="rs.guide.detachAll@en_US">
	    <atom type="UserName">Detach</atom>
	    <atom type="ButtonName">Detach</atom>
	    <atom type="Desc">Detaches all guides from a select guide(s).</atom>
	    <atom type="ToolTip">Detaches all guides attached to a selected guide.</atom>
	  </hash>

	  <hash type="Command" key="rs.guide.snapToGround@en_US">
	    <atom type="UserName">Snap To Ground</atom>
	    <atom type="ButtonName">Snap To Ground</atom>
	    <atom type="Desc">Moves currently selected module guide such that one edge of its bounding box is aligned with the ground level (0 on Y axis).</atom>
	    <atom type="ToolTip">Moves currently selected module guide such that one edge of its bounding box is aligned with the ground level (0 on Y axis).</atom>
	  </hash>

	  <hash type="Command" key="rs.guide.fitToGround@en_US">
	    <atom type="UserName">Scale To Rest On Ground</atom>
	    <atom type="ButtonName">Scale To Rest On Ground</atom>
	    <atom type="Desc">Scales currently selected module guide such that one edge of its bounding box touches the ground (0 on Y axis).</atom>
	    <atom type="ToolTip">Scales currently selected module guide such that one edge of its bounding box touches the ground (0 on Y axis).\nThis command useful for fitting legs such that they align with the gound level perfectly.</atom>
	  </hash>

	  <hash type="Command" key="rs.guide.selectRoots@en_US">
	    <atom type="UserName">Select Root Guides</atom>
	    <atom type="ButtonName">Select Root Guides</atom>
	    <atom type="Desc">Selects all root guides belonging to a currently selected module.</atom>
	    <atom type="ToolTip">Selects all root guides belonging to a currently selected module. A root guide is a guide that is not directly parented to any other guide.</atom>
	  </hash>

	  <!-- Meshes -->
	  <hash type="Command" key="rs.bind.assignMesh@en_US">
	    <atom type="UserName">Assign Bind Mesh</atom>
	    <atom type="ButtonName">Assign</atom>
	    <atom type="Desc">Assigns selected mesh to the rig as its bind mesh.</atom>
	    <atom type="ToolTip">Assigns selected mesh to the rig as its bind mesh.</atom>
	  </hash>

	  <hash type="Command" key="rs.bind.unassignMesh@en_US">
	    <atom type="UserName">Unassign Bind Mesh</atom>
	    <atom type="ButtonName">Unassign</atom>
	    <atom type="Desc">Unassigns selected mesh from the rig.</atom>
	    <atom type="ToolTip">Unassigns selected mesh from the rig.\nIf mesh is bound it can be unbound automatically first.</atom>
	  </hash>

	  <hash type="Command" key="rs.bind.resolutionPopup@en_US">
	    <atom type="UserName">Set Mesh Resolution</atom>
	    <atom type="ButtonName">Set Mesh Resolution</atom>
	    <atom type="Desc">Sets current mesh resolution.</atom>
	    <atom type="ToolTip">Switches selected rig or rigs to a given mesh resolution.\n</atom>
	  </hash>

	  <hash type="Command" key="rs.bind.addResolution@en_US">
	    <atom type="UserName">New Resolution</atom>
	    <atom type="ButtonName">New</atom>
	    <atom type="Desc">Adds new mesh resolution to the current rig.</atom>
	    <atom type="ToolTip">Adds new mesh resolution to the current rig.</atom>
	    <hash type="Argument" key="name">
	      <atom type="UserName">Name</atom>
	      <atom type="Desc">Name of resolution to create.</atom>
	      <atom type="ToolTip">Name of resolution to create.</atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.bind.renameResolution@en_US">
	    <atom type="UserName">Rename Resolution</atom>
	    <atom type="ButtonName">Rename</atom>
	    <atom type="Desc">Renames current mesh resolution.</atom>
	    <atom type="ToolTip">Renames current mesh resolution.</atom>
	    <hash type="Argument" key="name">
	      <atom type="UserName">Name</atom>
	      <atom type="Desc">Name of resolution to rename.</atom>
	      <atom type="ToolTip">Name of resolution to rename.</atom>
	    </hash>
	    <hash type="Argument" key="newName">
	      <atom type="UserName">Name</atom>
	      <atom type="Desc">New name for the resolution.</atom>
	      <atom type="ToolTip">New name for the resolution.</atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.bind.removeResolution@en_US">
	    <atom type="UserName">Remove Resolution</atom>
	    <atom type="ButtonName">Remove</atom>
	    <atom type="Desc">Removes mesh resolution from the current rig.</atom>
	    <atom type="ToolTip">Removes mesh resolution from the current rig.</atom>
	    <hash type="Argument" key="name">
	      <atom type="UserName">Name</atom>
	      <atom type="Desc">Name of resolution to remove.</atom>
	      <atom type="ToolTip">Name of resolution to remove.</atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.bind.switchResolution@en_US">
	    <atom type="UserName">Switch Resolution</atom>
	    <atom type="ButtonName">Switch Resolution</atom>
	    <atom type="Desc">Switches to next or previous mesh resolution from mesh resolutions list.</atom>
	    <atom type="ToolTip">Switches to next or previous mesh resolution from mesh resolutions list.</atom>
	  </hash>

      <hash type="ArgumentType" key="rsBind-type@en_US">
        <atom type="UserName">Bind Type</atom>

        <hash type="Option" key="rigid">
          <atom type="UserName">Rigid</atom>
        </hash>
        <hash type="Option" key="smoothD">
          <atom type="UserName">Smooth (Distance)</atom>
        </hash>
        <hash type="Option" key="smoothV">
          <atom type="UserName">Smooth (Visible)</atom>
        </hash>
        <hash type="Option" key="heat">
          <atom type="UserName">Heat</atom>
        </hash>
      </hash>

	  <hash type="Command" key="rs.bind@en_US">
	    <atom type="UserName">New Bind</atom>
	    <atom type="ButtonName">New Bind</atom>
	    <atom type="Desc">Sets up new bind using MODO's binding algorithms.</atom>
	    <atom type="ToolTip">Sets up new bind using MODO's binding algorithms.\nDefault bind provides a starting point for mesh deformations. It usually requires manual weight editing on top to achieve good deformation results during animation.</atom>
	    <hash type="Argument" key="mesh">
	      <atom type="UserName">Mesh</atom>
	      <atom type="Desc">Choose the mesh to bind.</atom>
	      <atom type="ToolTip">Choose the mesh to bind.</atom>
	    </hash>
	    <hash type="Argument" key="type">
	      <atom type="UserName">Bind Type</atom>
	      <atom type="Desc">One of available binding algorithms.</atom>
	      <atom type="ToolTip">One of available binding algorithms.</atom>
	      <atom type="ArgumentType">rsBind-type</atom>
	    </hash>
	    <hash type="Argument" key="skipUnused">
	      <atom type="UserName">Skip Joints With No Influence</atom>
	      <atom type="Desc">When checked the deformers that have no influence over the mesh after bind will not be connected to the mesh.</atom>
	      <atom type="ToolTip">When checked the deformers that have no influence over the mesh after bind will not be connected to the mesh.</atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.bind.fromMesh@en_US">
	    <atom type="UserName">Match By Influence</atom>
	    <atom type="ButtonName">Match By Influence</atom>
	    <atom type="Desc">Sets up binding using weight maps found on the mesh.</atom>
	    <atom type="ToolTip">Sets up binding using weight maps found on the mesh and bind skeleton joints.\nWeight maps are matched to joints based location of the joint and the center of the weight map influence area.\nThis command is useful for getting the initial mapping on meshes that have weight maps but have no bind map included.</atom>
	  </hash>

	  <hash type="Command" key="rs.bind.openMapUI@en_US">
	    <atom type="UserName">Bind From Map</atom>
	    <atom type="ButtonName">Bind From Map</atom>
	    <atom type="Desc">Opens a panel to set up bindings between bind skeleton joints and weight maps present in the mesh that is meant to be bound.</atom>
	    <atom type="ToolTip">Opens a panel to set up bindings between bind skeleton joints and weight maps present in the mesh that is meant to be bound.</atom>
	  </hash>

	  <hash type="Command" key="rs.bind.fromMap@en_US">
	    <atom type="UserName">Bind From Map</atom>
	    <atom type="ButtonName">Bind From Map</atom>
	    <atom type="Desc">Applies bind map to the bind mesh.</atom>
	    <atom type="ToolTip">Applies bind map to the bind mesh.</atom>
	  </hash>

      <hash type="ArgumentType" key="rsBindTransfer-method@en_US">
        <atom type="UserName">Bind Transfer Method</atom>

        <hash type="Option" key="raycast">
          <atom type="UserName">Raycast</atom>
        </hash>
        <hash type="Option" key="distance">
          <atom type="UserName">Distance</atom>
        </hash>
      </hash>

	  <hash type="Command" key="rs.bind.transfer@en_US">
	    <atom type="UserName">Transfer Bind</atom>
	    <atom type="ButtonName">Transfer Bind</atom>
	    <atom type="Desc">Transfers bind from a bind mesh already bound to the rig to the unbound mesh.</atom>
	    <atom type="ToolTip">Transfers bind from a bind mesh already bound to the rig to the unbound mesh.</atom>
	    <hash type="Argument" key="method">
	      <atom type="UserName">Method</atom>
	      <atom type="Desc">Choose transfer method.</atom>
	      <atom type="ToolTip">Choose transfer method.</atom>
	      <atom type="ArgumentType">rsBindTransfer-method</atom>
	    </hash>
	    <hash type="Argument" key="skipUnused">
	      <atom type="UserName">Skip Joints With No Influence</atom>
	      <atom type="Desc">When on deformers that have no effect on the mesh will not be connected to the mesh.</atom>
	      <atom type="ToolTip">When on deformers that have no effect on the mesh will not be connected to the mesh.</atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.bind.copy@en_US">
	    <atom type="UserName">Copy Bind</atom>
	    <atom type="ButtonName">Copy Bind</atom>
	    <atom type="Desc">Copies bind from an already bound mesh to the other, unbound one.</atom>
	    <atom type="ToolTip">Copies bind from an already bound mesh to the other, unbound one.</atom>
	    <hash type="Argument" key="skipUnused">
	      <atom type="UserName">Skip Joints With No Influence</atom>
	      <atom type="Desc">When on deformers that have no effect on the mesh will not be connected to the mesh.</atom>
	      <atom type="ToolTip">When on deformers that have no effect on the mesh will not be connected to the mesh.</atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.weights.transfer@en_US">
	    <atom type="UserName">Transfer Selected Weight Maps</atom>
	    <atom type="ButtonName">Transfer Selected Weight Maps</atom>
	    <atom type="Desc">Transfers selected weight maps between source mesh and one or more target meshes.</atom>
	    <atom type="ToolTip">Transfers selected weight maps between source mesh and one or more target meshes.</atom>
	    <hash type="Argument" key="method">
	      <atom type="UserName">Method</atom>
	      <atom type="Desc">Choose transfer method.</atom>
	      <atom type="ToolTip">Choose transfer method.</atom>
	      <atom type="ArgumentType">rsBindTransfer-method</atom>
	    </hash>
	    <hash type="Argument" key="skipEmpty">
	      <atom type="UserName">Skip Empty Maps</atom>
	      <atom type="Desc">Weight maps that are empty after transfer will be removed automatically.</atom>
	      <atom type="ToolTip">Weight maps that are empty after transfer will be removed automatically.</atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.unbind@en_US">
	    <atom type="UserName">Unbind</atom>
	    <atom type="ButtonName">Unbind</atom>
	    <atom type="Desc">Unbinds selected bound meshes from the rig.</atom>
	    <atom type="ToolTip">Unbinds selected bound meshes from the rig.</atom>
	    <hash type="Argument" key="bkpWeights">
	      <atom type="UserName">Backup Weights</atom>
	      <atom type="Desc">Creates a copy of weights that are in weight containers.</atom>
	      <atom type="ToolTip">Creates a copy of weights before weight containers are cleared from points in the unbound mesh(es).</atom>
	    </hash>
	    <hash type="Argument" key="bindMap">
	      <atom type="UserName">Backup Bind Map</atom>
	      <atom type="Desc">Stores bind map on a mesh. The bind map will be automatically retrieved next time the mesh is bound from map.</atom>
	      <atom type="ToolTip">Stores bind map on a mesh. The bind map will be automatically retrieved next time the mesh is bound from map.</atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.bind.selectDeforming@en_US">
	    <atom type="UserName">Select Affecting Bind Joints</atom>
	    <atom type="ButtonName">Select Affecting Bind Joints</atom>
	    <atom type="Desc">Selects all bind joints that affect selected mesh.</atom>
	    <atom type="ToolTip">Selects all bind joints that affect selected mesh.</atom>
	  </hash>

	  <hash type="Command" key="rs.bind.optimize@en_US">
	    <atom type="UserName">Optimize Bind</atom>
	    <atom type="ButtonName">Optimize Bind</atom>
	    <atom type="Desc">Scans all the bind joints affecting selected mesh and disconnects ones that have no actual influence on the mesh.</atom>
	    <atom type="ToolTip">Scans all the bind joints affecting selected mesh and disconnects ones that have no actual influence on the mesh.</atom>
	  </hash>

	  <hash type="Command" key="rs.bind.selectWMapInfluence@en_US">
	    <atom type="UserName">Select Influenced Vertices</atom>
	    <atom type="ButtonName">Select Influenced Vertices</atom>
	    <atom type="Desc">Selects all vertices influenced by currently selected weight map.</atom>
	    <atom type="ToolTip">Selects all vertices influenced by currently selected weight map.</atom>
	  </hash>

	  <hash type="Command" key="rs.bind.bakeNormalizedWeights@en_US">
	    <atom type="UserName">Bake Weights</atom>
	    <atom type="ButtonName">Bake Weights</atom>
	    <atom type="Desc">Bakes all weight maps such that the baked values are normalized (add up to 100% for all weight maps affecting given vertex).</atom>
	    <atom type="ToolTip">Bakes all weight maps such that the baked values are normalized (add up to 100% for all weight maps affecting given vertex).\nThis is equivalent to using Bake Weights button in Normalized Folder properties panel but the standard button does not work on ACS3 rig.</atom>
	  </hash>

	  <hash type="Command" key="rs.bind.mirrorWeights@en_US">
	    <atom type="UserName">Mirror Weights</atom>
	    <atom type="ButtonName">Mirror Weights</atom>
	    <atom type="Desc">Mirrors weights for entire rig.</atom>
	    <atom type="ToolTip">Mirrors weights for entire rig.</atom>
	  </hash>

	  <hash type="Command" key="rs.bind.proxyAutoSetup@en_US">
	    <atom type="UserName">Bind Proxies Auto Setup</atom>
	    <atom type="ButtonName">Bind Proxies Auto Setup</atom>
	    <atom type="Desc">Sets up bind proxies based on a given mesh.</atom>
	    <atom type="ToolTip">Automatically sets up bind proxies for selected mesh based on bind skeleton joints influence areas (weight maps).\nThe mesh will be sliced into pieces, each piece being equivalent of single bind skeleton joint influence area.\nA new mesh resolution will be set up with all created bind proxies added to that new resolution.\nNote that the quality of slicing into pieces greatly depends on quality of used weight maps. The better/more precise weights the better auto setup outcome.\nFor bind meshes with low polycount Subdivide Proxies setting is recommended.\nDouble Sided Proxies will automatically add inner side to proxy pieces with a material that can be edited in the Shader Tree.\nIf the bind mesh has rig clay set up and all regions are stored in selection sets you can apply the same rig clay setup to generated proxies by checking Set Up Rig Clay From Selection Sets option.</atom>
	    <hash type="Argument" key="name">
	      <atom type="UserName">Proxy Resolution Name</atom>
	    </hash>
	    <hash type="Argument" key="subdivide">
	      <atom type="UserName">Subdivide Proxies</atom>
	    </hash>
	    <hash type="Argument" key="doubleSided">
	      <atom type="UserName">Double Sided Proxies</atom>
	    </hash>
	    <hash type="Argument" key="restoreRegions">
	      <atom type="UserName">Set Up Rig Clay From Selection Sets</atom>
	    </hash>
	  </hash>

      <hash type="ArgumentType" key="rsBoxProxy-size@en_US">
        <atom type="UserName">Box Dimensions Based On</atom>

        <hash type="Option" key="length">
          <atom type="UserName">Bind Locator Length</atom>
        </hash>
        <hash type="Option" key="link">
          <atom type="UserName">Bind Locator Shape Properties</atom>
        </hash>
        <hash type="Option" key="mesh">
          <atom type="UserName">Bind Meshes</atom>
        </hash>
      </hash>

	  <hash type="Command" key="rs.bind.boxProxyAutoSetup@en_US">
	    <atom type="UserName">Box Proxies Auto Setup</atom>
	    <atom type="ButtonName">Box Proxies Auto Setup</atom>
	    <atom type="Desc">Sets up box shaped proxies based on bind skeleton locators.</atom>
	    <atom type="ToolTip">Automatically sets up box shaped proxies based on bind skeleton locators.\nThis feature is useful for quickly blocking out character mesh straight from the rig itself.</atom>
	    <hash type="Argument" key="name">
	      <atom type="UserName">Proxy Resolution Name</atom>
	    </hash>
	    <hash type="Argument" key="sizeFrom">
	      <atom type="UserName">Base Box Dimensions On</atom>
	      <atom type="ArgumentType">rsBoxProxy-size</atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.rig.clayAutoSetup@en_US">
	    <atom type="UserName">Rig Clay Auto Setup</atom>
	    <atom type="ButtonName">Rig Clay Auto Setup</atom>
	    <atom type="Desc">Sets up default rig clay regions.</atom>
	    <atom type="ToolTip">Sets up default rig clay regions.</atom>
	    <hash type="Argument" key="addSelectionSets">
	      <atom type="UserName">Add Selection Sets</atom>
	    </hash>
	  </hash>

      <hash type="ArgumentType" key="rsClayRegion-symmetry@en_US">
        <atom type="UserName">Symmetry</atom>

        <hash type="Option" key="none">
          <atom type="UserName">None</atom>
        </hash>
        <hash type="Option" key="axis">
          <atom type="UserName">Axis</atom>
        </hash>
        <hash type="Option" key="topo">
          <atom type="UserName">Topological</atom>
        </hash>
        <hash type="Option" key="current">
          <atom type="UserName">Use Current Settings</atom>
        </hash>
      </hash>

	  <hash type="Command" key="rs.rig.clayOpacity@en_US">
	    <atom type="UserName">Set Regions Opacity</atom>
	    <atom type="ButtonName">Set Regions Opacity</atom>
	    <atom type="Desc">Sets rig clay regions opacity.</atom>
	    <atom type="ToolTip">Sets opacity for all regions in the edited rig.</atom>
	    <hash type="Argument" key="value">
	      <atom type="UserName">Opacity</atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.module.assignPolygonRegionPopup@en_US">
	    <atom type="UserName">Assign Polygon Region</atom>
	    <atom type="ButtonName">Assign Polygon Region</atom>
	    <atom type="Desc">Assigns rig clay region to current polygon selection.</atom>
	    <atom type="ToolTip">Assigns rig clay region from a specified module to a current polygon selection.</atom>
	    <hash type="Argument" key="list">
	      <atom type="UserName">Module Clay Region</atom>
	    </hash>
	    <hash type="Argument" key="symmetry">
	      <atom type="UserName">Symmetry</atom>
	      <atom type="ArgumentType">rsClayRegion-symmetry</atom>
	    </hash>
	    <hash type="Argument" key="addSelectionSet">
	      <atom type="UserName">Add Selection Set(s)</atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.module.clearPolygonRegionPopup@en_US">
	    <atom type="UserName">Clear Polygon Region</atom>
	    <atom type="ButtonName">Clear Polygon Region</atom>
	    <atom type="Desc">Clears specified rig clay region.</atom>
	    <atom type="ToolTip">Clears single rig clay region from a module.</atom>
	    <hash type="Argument" key="list">
	      <atom type="UserName">Module Clay Region</atom>
	    </hash>
	    <hash type="Argument" key="symmetry">
	      <atom type="UserName">Symmetry</atom>
	      <atom type="ArgumentType">rsClayRegion-symmetry</atom>
	    </hash>
	    <hash type="Argument" key="keepSelectionSet">
	      <atom type="UserName">Keep Selection Set(s)</atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.rig.clearClaySetup@en_US">
	    <atom type="UserName">Clear Rig Clay Setup</atom>
	    <atom type="ButtonName">Clear Setup</atom>
	    <atom type="Desc">Clears rig clay setup for the entire rig.</atom>
	    <atom type="ToolTip">Clears rig clay setup for the entire rig.</atom>
	    <hash type="Argument" key="keepSelectionSets">
	      <atom type="UserName">Keep Selection Sets</atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.module.clearClaySetup@en_US">
	    <atom type="UserName">Clear All Module Regions</atom>
	    <atom type="ButtonName">Clear All Module Regions</atom>
	    <atom type="Desc">Clears all regions from currently selected module.</atom>
	    <atom type="ToolTip">Clears all regions from currently selected module.</atom>
	    <hash type="Argument" key="symmetry">
	      <atom type="UserName">Symmetry</atom>
	    </hash>
	    <hash type="Argument" key="keepSelectionSets">
	      <atom type="UserName">Keep Selection Sets</atom>
	    </hash>
	  </hash>

	  <hash type="Command" key="rs.attach.add@en_US">
	    <atom type="UserName">Attach</atom>
	    <atom type="ButtonName">Attach</atom>
	    <atom type="Desc">Attaches selected meshes to the rig.</atom>
	    <atom type="ToolTip">Attaches selected meshes to the rig. Select mesh(es) that you want to attach and a bind skeleton joint to attach mesh(es) to.</atom>
	  </hash>

	  <hash type="Command" key="rs.attach.addAuto@en_US">
	    <atom type="UserName">Auto Attach</atom>
	    <atom type="ButtonName">Auto Attach</atom>
	    <atom type="Desc">Automatically attaches each selected mesh to its nearest bind skeleton joint.</atom>
	    <atom type="ToolTip">Automatically attaches each selected mesh to its nearest bind skeleton joint.</atom>
	  </hash>

	  <hash type="Command" key="rs.attach.remove@en_US">
	    <atom type="UserName">Detach</atom>
	    <atom type="ButtonName">Detach</atom>
	    <atom type="Desc">Detaches selected meshes from the rig.</atom>
	    <atom type="ToolTip">Detaches selected meshes from the rig.</atom>
	  </hash>

	  <hash type="Command" key="rs.rig.selectPopup@en_US">
	    <atom type="UserName">Select Rig</atom>
	    <atom type="ButtonName">Select Rig</atom>
	    <atom type="Desc">Selects a rig animation tools will work with.</atom>
	    <atom type="ToolTip">Selects a rig that animation tools will work with.\nIf no specific rig is selected all rigs are considered to be selected.\nMultiselection is only possible with Set Rig Selection From Scene button.</atom>
	  </hash>
	  <hash type="Command" key="rs.rig.selectFromScene@en_US">
	    <atom type="UserName">Set Rig Selection From Scene</atom>
	    <atom type="ButtonName">Set Rig Selection From Scene</atom>
	    <atom type="Desc">Sets rig selection from items selected in the scene.</atom>
	    <atom type="ToolTip">Sets rig selection from rig items selected in the scene.\nFor example if you select items belonging to 2 rigs these 2 rigs will be selected.</atom>
	  </hash>

	  <hash type="Command" key="rs.select.openModuleCtrlsUI@en_US">
	    <atom type="UserName">Select Controllers By Module</atom>
	    <atom type="ButtonName">Select Controllers By Module</atom>
	    <atom type="Desc">Selects all controllers from a chosen module.</atom>
	    <atom type="ToolTip">Opens a panel with all modules listed as buttons.\nPushing a button selects all controllers from the module that button represents.\nUse Shift and Ctrl modifier keys to open a panel in additive or substractive selection modes respectively.</atom>
	  </hash>

	  <hash type="Command" key="rs.select.moduleCtrlsFromSelection@en_US">
	    <atom type="UserName">Expand Selection To Module</atom>
	    <atom type="ButtonName">Expand Selection To Module</atom>
	    <atom type="Desc">Selects all controllers from selected modules.</atom>
	    <atom type="ToolTip">Use this command to quickly select all controllers belonging to a given module by selecting at least one of its controllers first.</atom>
	  </hash>

	  <hash type="Command" key="rs.ikfk.sync@en_US">
	    <atom type="UserName">Synchronize IK/FK chains</atom>
	    <atom type="ButtonName">Synchroznie IK/FK chains</atom>
	    <atom type="Desc">Synchronizes IK and FK chains poses so there is no difference as you blend between the two.</atom>
	    <atom type="ToolTip">Synchronizes IK and FK chains poses so there is no difference as you blend between the two.</atom>
	  </hash>

	  <hash type="Command" key="rs.anim.panel@en_US">
	    <atom type="UserName">Open Channel Set</atom>
	    <atom type="ButtonName">Open Channel Set</atom>
	    <atom type="Desc">Opens channel set for a module currently selected controllers belong to.</atom>
	    <atom type="ToolTip">To open channel set for specific module select any of its controllers first.</atom>
	  </hash>

	  <hash type="Command" key="rs.gesture.enable@en_US">
	    <atom type="UserName">Toggle Rig Clay</atom>
	    <atom type="ButtonName">Toggle Rig Clay</atom>
	    <atom type="Desc">Toggles rig clay (command regions) interface on/off.</atom>
	    <atom type="ToolTip">Toggles rig clay (command regions) interface on/off.</atom>
	  </hash>

	  <hash type="Command" key="rs.rig.clayMode@en_US">
	    <atom type="UserName">Set Rig Clay Mode</atom>
	    <atom type="ButtonName">Set Rig Clay Mode</atom>
	    <atom type="Desc">Sets rig clay mode to either tool or gesture.</atom>
	    <atom type="ToolTip">Sets rig clay mode to either tool or gesture.</atom>
	  </hash>

	  <hash type="Command" key="rs.pose.copy@en_US">
	    <atom type="UserName">Copy Pose</atom>
	    <atom type="ButtonName">Copy Pose</atom>
	    <atom type="Desc">Copies pose at current frame into a buffer.</atom>
	    <atom type="ToolTip">Copies pose at current frame into a buffer.\nThe pose is copied for selected controllers or for entire rig if no controllers are selected.</atom>
	  </hash>

	  <hash type="Command" key="rs.pose.paste@en_US">
	    <atom type="UserName">Paste Pose</atom>
	    <atom type="ButtonName">Paste Pose</atom>
	    <atom type="Desc">Pastes pose from a buffer.\nYou need to copy a pose into the buffer first.</atom>
	    <atom type="ToolTip">Pastes pose from a buffer.\nYou need to copy a pose into the buffer first.</atom>
	  </hash>

	  <hash type="Command" key="rs.pose.mirror@en_US">
	    <atom type="UserName">Mirror Pose</atom>
	    <atom type="ButtonName">Mirror Pose</atom>
	    <atom type="Desc">Mirrors pose along X axis for selected controllers or an entire rig if no controllers are selected.</atom>
	    <atom type="ToolTip">Mirrors pose along X axis for selected controllers or an entire rig if no controllers are selected.</atom>
	  </hash>

	  <hash type="Command" key="rs.action.mirror@en_US">
	    <atom type="UserName">Mirror Action</atom>
	    <atom type="ButtonName">Mirror Action</atom>
	    <atom type="Desc">Mirrors current action on X axis.</atom>
	    <atom type="ToolTip">Mirrors current action on X axis.</atom>
	  </hash>

	  <hash type="Command" key="rs.controller.animSpaceEnv@en_US">
	    <atom type="UserName">Enable Controller Space Switching</atom>
	    <atom type="ButtonName">Enable Controller Space Switching</atom>
	    <atom type="Desc">Initializes space switching for a selected controller.</atom>
	    <atom type="ToolTip">Initializes space switching for a selected controller.\nThis is done by adding an envelope to the dynamic parent setup and setting initial key with current parent on it.\nThis makes the controller ready for switching its parents during animation.\nDepressing that button removes dynamic parents animation and the controller has to be initialized again.</atom>
	  </hash>

	  <hash type="Command" key="rs.controller.selectDynaParent@en_US">
	    <atom type="UserName">Select Dynamic Parent Modifier</atom>
	    <atom type="ButtonName">Select Dynamic Parent Modifier</atom>
	    <atom type="Desc">Selects dynamic parent modifier that drives space switching for selected controller.</atom>
	    <atom type="ToolTip">Selects dynamic parent modifier that drives space switching for selected controller.\nThis provides quick access to dynamic parent modifier properties.</atom>
	  </hash>

	  <hash type="Command" key="rs.controller.dynaParentDraw@en_US">
	    <atom type="UserName">Draw Dynamic Parent Link</atom>
	    <atom type="ButtonName">Draw Dynamic Parent Link</atom>
	    <atom type="Desc">Toggles drawing dynamic parent link for controllers that have space switching initialized.</atom>
	    <atom type="ToolTip">Toggles drawing dynamic parent link for controllers that have space switching initialized.</atom>
	  </hash>

	  <hash type="Command" key="rs.ctrl.addParent@en_US">
	    <atom type="UserName">Add Parent</atom>
	    <atom type="ButtonName">Add Parent</atom>
	    <atom type="Desc">Adds new dynamic parent for a first selected controller and switches to that space at current frame.</atom>
	    <atom type="ToolTip">Adds new dynamic parent for a first selected controller and switches to that space at current frame.\nThis is equivalent to setting new dynamic parent via drag and drop action.</atom>
	  </hash>

	  <hash type="Command" key="rs.ctrl.removeParent@en_US">
	    <atom type="UserName">Delete Current Parent</atom>
	    <atom type="ButtonName">Delete Current Parent</atom>
	    <atom type="Desc">Removes currently active dynamic parent from space switching animation and setup completely.</atom>
	    <atom type="ToolTip">Removes currently active dynamic parent from the space switching setup completely.\nNote that the parent will be removed from all actions, not just the current action. Use this command only if you want to delete the parent from all animation on all actions!</atom>
	  </hash>

	  <hash type="Command" key="rs.ctrl.setDynaParent@en_US">
	    <atom type="UserName">Parent</atom>
	    <atom type="ButtonName">Parent</atom>
	    <atom type="Desc">Switches selected controller parent space to the one chosen from the list.</atom>
	    <atom type="ToolTip">Switches selected controller parent space to the one chosen from the list.</atom>
	  </hash>

	  <hash type="Command" key="rs.chanSet.selectSourceItem@en_US">
	    <atom type="UserName">Select Channel Set Source Item</atom>
	    <atom type="ButtonName">Select Channel Set Source Item</atom>
	    <atom type="Desc">Selects the item that contains all the channels present in the channel set.</atom>
	    <atom type="ToolTip">Selects the item that contains all the channels present in the channel set. Use this command to get direct access to channel set's channels (for editing in Graph Editor for example).</atom>
	  </hash>

	  <hash type="Command" key="rs.anim.keyInfo@en_US">
	    <atom type="UserName">Keyframe Statistics</atom>
	    <atom type="ButtonName">Keyframe Statistics</atom>
	    <atom type="Desc">Shows keyframe and envelope statistics for selected rig, controllers or channels.</atom>
	    <atom type="ToolTip">Shows keyframe and envelope statistics for selected rig, controllers or channels..</atom>
	  </hash>

  </atom>
</configuration>